'use client'

import type { NotificationType } from '@/types/NotificationType'

export default function ComingNotify({
  notifications = [],
  loading = false,
  error = null,
}: {
  notifications?: NotificationType[]
  loading?: boolean
  error?: string | null
}) {
  if (loading) return <div>Loading...</div>
  if (error) return <div>Error: {error}</div>

  // Upcoming = notifyDate in the future (or today)
  const now = new Date()
  now.setHours(0, 0, 0, 0)
  const upcoming = notifications.filter(
    (item) => new Date(item.notifyDate) >= now
  )

  const handleDelete = async (id: string) => {
    if (confirm('‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏£‡∏¥‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
      const res = await fetch('/api/manage-notification/delete', {
        method: 'DELETE',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ id }),
      })
      if (res.ok) {
        window.location.reload()
      } else {
        alert('‡∏•‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')
      }
    }
  }

  return (
    <div className="notification-list">
      {upcoming.length > 0 ? (
        upcoming.map((item) => {
          // === ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ===
          const notifyDate = new Date(item.notifyDate)
          notifyDate.setHours(0, 0, 0, 0)
          const daysLeft = Math.ceil(
            (notifyDate.getTime() - now.getTime()) / (1000 * 60 * 60 * 24)
          )

          return (
            <div key={item._id || item.id} className="notification-card">
              {/* Absolute Delete Button */}
              <button
                className="delete-btn"
                title="‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ"
                onClick={() => handleDelete(item._id || item.id)}
                aria-label="‡∏•‡∏ö"
              >
                <i className="fa-solid fa-xmark"></i>
              </button>
              <div>
                üìÖ <strong>{item.title}</strong>
              </div>
              <div style={{ whiteSpace: 'pre-line' }}>
                ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: {item.detail || '-'}
              </div>
              <div>
                ‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î:{' '}
                {new Date(item.notifyDate).toLocaleDateString('th-TH')}
              </div>
              <div>‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏µ‡∏Å: {daysLeft} ‡∏ß‡∏±‡∏ô</div>
              <div>
                ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤:{' '}
                {Array.isArray(item.notifyBeforeDays) &&
                item.notifyBeforeDays.length > 0
                  ? item.notifyBeforeDays.join(', ') + ' ‡∏ß‡∏±‡∏ô'
                  : '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}{' '}
              </div>
              <div>
                {Array.isArray(item.notifiedDays) &&
                item.notifiedDays.length > 0
                  ? `‡πÅ‡∏à‡πâ‡∏á‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß: ${item.notifiedDays.join(', ')} ‡∏ß‡∏±‡∏ô`
                  : '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤'}
              </div>
              <div>
                ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {item.isNotified ? '‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß' : '‡∏£‡∏≠‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô'}
              </div>
              <div>‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢: {item.createdBy || '-'}</div>
              <div style={{ fontSize: '0.9em', color: '#888' }}>
                ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠:{' '}
                {item.createdAt
                  ? new Date(item.createdAt).toLocaleString('th-TH')
                  : '-'}
              </div>
            </div>
          )
        })
      ) : (
        <div style={{ color: '#aaa' }}>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏°‡∏≤‡∏ñ‡∏∂‡∏á</div>
      )}
    </div>
  )
}
