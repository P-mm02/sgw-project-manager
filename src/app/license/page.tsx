import './page.css'
import { connectToDB } from '@/lib/mongoose'
import License, { LicenseType } from '@/models/License'
import { formatDateToThai } from '@/lib/formatDateToThai'
import Link from 'next/link'
import { sendLineMessage } from '@/lib/sendLineMessage'


export const metadata = {
  title: '‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï | SG-WORKING',
}

export default async function LicensingWork() {
  await connectToDB()
  const licenses = (await License.find()
    .sort({ licenseExpireDate: -1 })
    .lean()) as LicenseType[]  
  const today = new Date()
  const ninetyDaysFromNow = new Date(today.getTime() + 90 * 24 * 60 * 60 * 1000)
  const sixtyDaysFromNow = new Date(today.getTime() + 60 * 24 * 60 * 60 * 1000)
  const thirtyDaysFromNow = new Date(today.getTime() + 30 * 24 * 60 * 60 * 1000)

  const userId = 'Ua053de08814ccd75375a472e6a404f3e'

  await Promise.all(
    licenses.map(async (license) => {
      const rawExpireDate = license.licenseExpireDate
      if (!rawExpireDate) return // skip if undefined or null

      const expireDate = new Date(rawExpireDate)
      if (
        (license.notificationSent === 0 && expireDate < ninetyDaysFromNow) ||
        (license.notificationSent === 1 && expireDate < sixtyDaysFromNow) ||
        (license.notificationSent === 2 && expireDate < thirtyDaysFromNow)
      ) {
        const message =
          '‚ö†Ô∏è' +
          license.clientName +
          '\n‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà\n' +
          license.licenseNumber +
          '\n‡∏à‡∏∞‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà\n' +
          formatDateToThai(license.licenseExpireDate) +
          '\nüìå ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï'
        await sendLineMessage(userId, message)
        //console.log(message)

        // Optional DB update
        await License.findByIdAndUpdate(license._id, {
          $inc: { notificationSent: 1 },
        })
        
      }
    })
  )
  
  return (
    <main className="license-container">
      <header className="license-header">
        <h1>üìÑ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÄ‡∏à‡∏≤‡∏∞‡∏ô‡πâ‡∏≥‡∏ö‡∏≤‡∏î‡∏≤‡∏•</h1>
        <Link href="/license/add" className="addLicense">
          ‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï
        </Link>
      </header>

      <div className="license-grid">
        {licenses.map((item) => {
          const expireDate = item.licenseExpireDate
            ? new Date(item.licenseExpireDate)
            : undefined
          const issueDate = item.licenseIssuedDate
            ? new Date(item.licenseIssuedDate)
            : undefined

          const isExpired = expireDate ? expireDate < today : false
          const diffInDays = expireDate
            ? Math.ceil(
                (expireDate.getTime() - today.getTime()) / (1000 * 60 * 60 * 24)
              )
            : 0
          const isNearExpired = diffInDays > 0 && diffInDays <= 30

          return (
            <div
              key={item._id}
              className={`license-card ${
                isExpired
                  ? 'expired'
                  : isNearExpired
                  ? 'near-expired'
                  : 'active'
              }`}
            >
              <h2>
                ‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï
                {{
                  drilling: '‡πÄ‡∏à‡∏≤‡∏∞‡∏ö‡πà‡∏≠',
                  waterUse: '‡πÉ‡∏ä‡πâ‡∏ô‡πâ‡∏≥',
                  modify: '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡πà‡∏≠',
                  cancel: '‡∏≠‡∏∏‡∏î‡∏Å‡∏•‡∏ö‡∏ö‡πà‡∏≠',
                }[item.licenseType ?? ''] || ''}
              </h2>
              <h2>‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà: {item.licenseNumber || ''}</h2>
              <ul>
                <li>
                  <strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:</strong>{' '}
                  {{
                    drilling: '‡πÄ‡∏à‡∏≤‡∏∞‡∏ö‡πà‡∏≠',
                    waterUse: '‡πÉ‡∏ä‡πâ‡∏ô‡πâ‡∏≥',
                    modify: '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ö‡πà‡∏≠',
                    cancel: '‡∏≠‡∏∏‡∏î‡∏Å‡∏•‡∏ö‡∏ö‡πà‡∏≠',
                  }[item.licenseType ?? ''] || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}
                </li>
                <li>
                  <strong>‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£:</strong> {item.clientName || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}
                </li>
                <li>
                  <strong>‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á:</strong> {item.clientAddress || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}
                </li>
                <li>
                  <strong>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ö‡πà‡∏≠:</strong> {item.wellDescription || '‚Äî'}
                </li>
                <li>
                  <strong>‡πÄ‡∏•‡∏Ç‡∏ö‡πà‡∏≠:</strong> {item.wellNumber || '‚Äî'}
                </li>
                <li>
                  <strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ:</strong>{' '}
                  {issueDate ? formatDateToThai(issueDate) : '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}
                </li>
                <li>
                  <strong>‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏:</strong>{' '}
                  {expireDate ? formatDateToThai(expireDate) : '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}
                </li>
                <li>
                  <strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong>{' '}
                  {isExpired
                    ? 'üî¥ ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß'
                    : isNearExpired
                    ? 'üü° ‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏'
                    : 'üü¢ ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà'}
                </li>
                <li>
                  <strong>‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏ß‡∏•‡∏≤:</strong>{' '}
                  {expireDate
                    ? isExpired
                      ? '‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß'
                      : `${diffInDays} ‡∏ß‡∏±‡∏ô`
                    : '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}
                </li>
              </ul>
              <div className="license-actions">
                <a href="#">üìé ‡∏î‡∏π‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏ô‡∏ö</a>
                <a href="#">üìç ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà</a>
              </div>
            </div>
          )
        })}
      </div>
    </main>
  )
}
